@page "/login"
@using IMGNCar.Components.Layout
@using System.ComponentModel.DataAnnotations
@using System.Text.Json
@using Microsoft.AspNetCore.Components
@layout EmptyLayout
@inject HttpClient Http
@inject NavigationManager NavManager
@rendermode InteractiveServer

<PageTitle>Login</PageTitle>

<div class="container d-flex flex-column justify-content-center align-items-center" style="min-height: 100vh;">
    <div class="card shadow-sm" style="max-width: 400px; width: 100%;">
        <div class="card-body p-4">
            <!-- Logo in the center -->
            <div class="text-center mb-4">
                <img src="Media/logo.png" alt="Logo" style="max-height: 80px;" />
            </div>

            <h3 class="card-title text-center mb-4">Login</h3>

            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert alert-danger">@ErrorMessage</div>
            }

            <div class="mb-3">
                <label for="usernameInput" class="form-label">Username</label>
                <input id="usernameInput" class="form-control" @bind="Username" />
            </div>
            <div class="mb-3">
                <label for="passwordInput" class="form-label">Password</label>
                <input id="passwordInput" type="password" class="form-control" @bind="Password" />
            </div>

            <div class="d-flex justify-content-between align-items-center">
                <button class="btn btn-secondary" @onclick="GoToSignUp">Sign Up</button>
                <button class="btn btn-primary" @onclick="LoginUser">Login</button>
            </div>
        </div>
    </div>
</div>

@code {
    private string Username { get; set; } = "";
    private string Password { get; set; } = "";
    private string ErrorMessage { get; set; } = "";

    [Inject] private IAuthenticationService AuthService { get; set; }
    [Inject] private AuthenticationStateProvider AuthStateProvider { get; set; }

    private async Task LoginUser()
    {
        var loginRequest = new { Username, Password };
        var response = await Http.PostAsJsonAsync("http://localhost:5087/api/users/login", loginRequest);

        if (response.IsSuccessStatusCode)
        {
            // On success, navigate to home or a dashboard page
            NavManager.NavigateTo("/");
        }
        else
        {
            ErrorMessage = "Invalid username or password!";
        }
    }

    private void GoToSignUp()
    {
        // Navigate to a signup page
        NavManager.NavigateTo("/signup");
    }
}
