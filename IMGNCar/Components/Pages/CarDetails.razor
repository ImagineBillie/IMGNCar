@page "/cars/{id:int}"
@using System.Net.Http.Json
@inject HttpClient Http
@rendermode InteractiveServer
@inject NavigationManager NavManager

<PageTitle>@car?.Make @car?.Model Details</PageTitle>

<div class="container py-5">
    @if (car == null)
    {
        <div class="text-center my-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-3">Loading car details...</p>
        </div>
    }
    else
    {
        <div class="row g-5">
            <!-- Image Column -->
            <div class="col-md-6">
                <div class="car-image-container bg-light p-3 rounded-4 shadow-sm">
                    <div class="ratio ratio-16x9">
                        <img src="Media/Cars/@car.ImageUrl" 
                             alt="@car.Make @car.Model"
                             class="img-fluid rounded-3"
                             style="object-fit: contain; object-position: center;">
                    </div>
                </div>
            </div>

            <!-- Details Card -->
            <div class="col-md-6">
                <div class="card shadow-lg h-100">
                    <div class="card-body p-4">
                        <h1 class="display-6 mb-3 fw-bold text-primary">@car.Make @car.Model</h1>
                        
                        <!-- Status and Price Header -->
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <span class="badge @(car.AvailabilityStatus ? "bg-success" : "bg-danger") fs-6">
                                @(car.AvailabilityStatus ? "Available Now" : "Currently Unavailable")
                            </span>
                            <h3 class="text-success fw-bold">RM @car.DailyRate<small class="text-muted fs-6">/day</small></h3>
                        </div>

                        <!-- Specifications Grid -->
                        <div class="row g-3 mb-4">
                            <div class="col-6">
                                <div class="spec-card p-3 bg-light rounded">
                                    <i class="bi bi-calendar-check me-2"></i>
                                    <strong>Year:</strong> @car.Year
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="spec-card p-3 bg-light rounded">
                                    <i class="bi bi-gear me-2"></i>
                                    <strong>Transmission:</strong> @car.TransmissionType
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="spec-card p-3 bg-light rounded">
                                    <i class="bi bi-people me-2"></i>
                                    <strong>Passengers:</strong> @car.NumberOfPassengers
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="spec-card p-3 bg-light rounded">
                                    <i class="bi bi-bag me-2"></i>
                                    <strong>Bags:</strong> @car.NumberOfBags
                                </div>
                            </div>
                        </div>

                        <!-- Additional Details -->
                        <div class="details-section mb-4">
                            <h5 class="mb-3 text-secondary"><i class="bi bi-info-circle me-2"></i>Vehicle Details</h5>
                            <dl class="row">
                                <dt class="col-sm-4">Category</dt>
                                <dd class="col-sm-8">@car.Category</dd>

                                <dt class="col-sm-4">Color</dt>
                                <dd class="col-sm-8">
                                    <span class="color-dot" style="background-color: @car.Color.ToLower()"></span>
                                    @car.Color
                                </dd>

                                <dt class="col-sm-4">Mileage</dt>
                                <dd class="col-sm-8">@car.Mileage.ToString("N0") km</dd>
                            </dl>
                        </div>

                        <!-- Action Buttons -->
                        <div class="d-grid gap-3 d-md-flex justify-content-md-end mt-auto">
                            <button class="btn btn-primary btn-lg px-4" 
                                    disabled="@(!car.AvailabilityStatus)"
                                    @onclick='() => NavManager.NavigateTo($"/booking/{car.CarId}")'>
                                <i class="bi bi-calendar2-check me-2"></i>Book Now
                            </button>
                            <button class="btn btn-outline-secondary btn-lg px-4" @onclick="GoBack">
                                <i class="bi bi-arrow-left me-2"></i>Back to List
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .car-image-container {
        border: 1px solid #dee2e6;
        background: linear-gradient(145deg, #f8f9fa, #e9ecef);
    }
    
    .spec-card {
        transition: transform 0.2s;
        height: 100%;
    }
    
    .spec-card:hover {
        transform: translateY(-3px);
    }
    
    .color-dot {
        display: inline-block;
        width: 16px;
        height: 16px;
        border-radius: 50%;
        margin-right: 8px;
        border: 2px solid #dee2e6;
    }

    .ratio-16x9 {
        --bs-aspect-ratio: 56.25%;
    }
</style>

@code {
    [Parameter] public int id { get; set; }
    private Car? car;

    protected override async Task OnInitializedAsync()
    {
        try {
            car = await Http.GetFromJsonAsync<Car>($"http://localhost:5087/api/cars/{id}");
        }
        catch (Exception ex) {
            Console.WriteLine($"Error loading car: {ex.Message}");
            NavManager.NavigateTo("/not-found");
        }
    }

    private void GoBack() => NavManager.NavigateTo("/browse");

    public class Car
    {
        public int CarId { get; set; }
        public string Make { get; set; } = default!;
        public string Model { get; set; } = default!;
        public int Year { get; set; }
        public string Category { get; set; } = default!;
        public string TransmissionType { get; set; } = default!;
        public int NumberOfPassengers { get; set; }
        public int NumberOfBags { get; set; }
        public string Color { get; set; } = default!;
        public int Mileage { get; set; }
        public decimal DailyRate { get; set; }
        public bool AvailabilityStatus { get; set; }
        public string ImageUrl { get; set; } = default!;
    }
}