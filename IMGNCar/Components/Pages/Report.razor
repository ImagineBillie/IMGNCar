@page "/admin/home"
@using IMGNCar.Components.Layout
@layout AdminLayout
@rendermode InteractiveServer
@inject HttpClient Http
@inject NavigationManager NavManager

<PageTitle>War Room</PageTitle>

<div class="container py-5">
    <h1 class="mb-4" style="padding-left:15px"><u>Dashboard</u></h1>

    <div class="row">
        <!-- Main Content -->
        <div class="col-md-12 p-4">
            @if (errorMessage != null)
            {
                <div class="alert alert-danger">@errorMessage</div>
            }

            else
            {
                <!-- Users Table -->
                <div class="mb-4">
                    <h3>Users</h3>
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>ID</th>
                                <th>Username</th>
                                <th>Email</th>
                                <th>Phone</th>
                                <th>Name</th>
                                <th>Age</th>
                                <th>Signup Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in users)
                            {
                                <tr>
                                    <td>@user.UserId</td>
                                    <td>@user.Username</td>
                                    <td>@user.Email</td>
                                    <td>@user.PhoneNumber</td>
                                    <td>@user.FirstName @user.LastName</td>
                                    <td>@GetAgeDisplay(user.DateOfBirth)</td>
                                    <td>@user.RegistrationDate.ToString("dd MMM yyyy HH:mm")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Cars Table -->
                <div class="mb-4">
                    <h3>Cars</h3>
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>ID</th>
                                <th>Make</th>
                                <th>Model</th>
                                <th>Year</th>
                                <th>Category</th>
                                <th>Transmission</th>
                                <th>Daily Rate</th>
                                <th>Availability</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var car in cars)
                            {
                                <tr>
                                    <td>@car.CarId</td>
                                    <td>@car.Make</td>
                                    <td>@car.Model</td>
                                    <td>@car.Year</td>
                                    <td>@car.Category</td>
                                    <td>@car.TransmissionType</td>
                                    <td>@(car.AvailabilityStatus ? "✅ Available" : "⛔ Booked")</td>
                                    <td>RM @car.DailyRate</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            
                <!-- Bookings Table -->
                <div class="mb-4">
                    <h3>Bookings</h3>
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>Booking ID</th>
                                <th>User ID</th>
                                <th>Car ID</th>
                                <th>Pickup Date</th>
                                <th>Return Date</th>
                                <th>Total Price</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var booking in bookings)
                            {
                                <tr>
                                    <td>@booking.BookingId</td>
                                    <td>@booking.UserId</td>
                                    <td>@booking.CarId</td>
                                    <td>@booking.PickupDatetime.ToString("dd MMM yyyy")</td>
                                    <td>@booking.DropoffDatetime.ToString("dd MMM yyyy")</td>
                                    <td>RM @booking.TotalRentalPrice</td>
                                    <td>@booking.BookingStatus</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private string activeTab = "users";
    private List<User> users = new();
    private List<Car> cars = new();
    private List<Booking> bookings = new();
    private User? selectedUser;
    private Car? selectedCar;
    private Booking? selectedBooking;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            users = await Http.GetFromJsonAsync<List<User>>("http://localhost:5087/api/users") ?? new();
            cars = await Http.GetFromJsonAsync<List<Car>>("http://localhost:5087/api/cars") ?? new();
            bookings = await Http.GetFromJsonAsync<List<Booking>>("http://localhost:5087/api/bookings") ?? new();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading data: {ex.Message}";
        }
    }

    private string GetAgeDisplay(DateTime? dateOfBirth)
    {
        if (!dateOfBirth.HasValue || dateOfBirth.Value > DateTime.Today)
        {
            return "N/A";
        }

        var today = DateTime.Today;
        var age = today.Year - dateOfBirth.Value.Year;

        if (dateOfBirth.Value.Date > today.AddYears(-age))
        {
            age--;
        }

        return $"{age} years";
    }

    // Model Classes
    public class User
    {
        public int UserId { get; set; }
        public string Username { get; set; } = string.Empty;
        public string PasswordHash { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string PhoneNumber { get; set; } = string.Empty;
        public string FirstName { get; set; } = string.Empty;
        public string LastName { get; set; } = string.Empty;
        public DateTime DateOfBirth { get; set; }
        public DateTime RegistrationDate { get; set; }
    }

    // Model Classes (FIXED TYPES)
    public class Car
    {
        public int CarId { get; set; }
        public string Make { get; set; } = string.Empty;
        public string Model { get; set; } = string.Empty;
        public int Year { get; set; }
        public string Category { get; set; } = string.Empty;
        public string TransmissionType { get; set; } = string.Empty;
        public bool AvailabilityStatus { get; set; }
        public decimal DailyRate { get; set; }
    }


    public class Booking
    {
        public int BookingId { get; set; }
        public int UserId { get; set; }
        public int CarId { get; set; }
        public string PickupLocation { get; set; } = string.Empty;
        public DateTime PickupDatetime { get; set; }
        public string DropoffLocation { get; set; } = string.Empty;
        public DateTime DropoffDatetime { get; set; }
        public string BookingDate { get; set; } = string.Empty;
        public int RentalDays { get; set; }
        public decimal TotalRentalPrice { get; set; }
        public string BookingStatus { get; set; } = string.Empty;
        public string CreatedAt { get; set; }= string.Empty;
        public string UpdatedAt { get; set; } = string.Empty;
    }
}

<style>
    .modal {
        backdrop-filter: blur(2px);
    }

    .table-hover tbody tr:hover {
        background-color: #f8f9fa;
        cursor: pointer;
    }

    .list-group-item.active {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }
</style>